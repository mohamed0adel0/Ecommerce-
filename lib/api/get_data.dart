import 'dart:async';
import 'package:api_project/models/get_product.dart';
import 'package:dio/dio.dart';
import 'package:flutter/material.dart';

class get_data extends StatefulWidget {
  const get_data({super.key});

  @override
  State<get_data> createState() => _get_dataState();
}

class _get_dataState extends State<get_data> {
  List<Autogenerated>datas=[];
  List<Images>imagee=[];
  late BuildContext dialogContext;
  Future<void>getAlldata()async{
    const geturl='http://anyabdulla-001-site1.htempurl.com/api/product';
    Dio dio=Dio();
    try
    {
      final response=await dio.get(geturl);
      if(response.statusCode==200)
      {
        for(var data in response.data)
        {
          setState(() {
            datas.add(Autogenerated.fromJson(data));
            imagee.add(Images.fromJson(data));
          });

          
        }
      }
      else{
        debugPrint('error : ${response.data}');
      }
    }
    catch(e)
    {
      debugPrint('exception $e');
    }
  }
  @override
  void initState(){
    getAlldata();
    super.initState();
  }

  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Admin Interface'),
      ),
      body:datas.isEmpty? Center(child: CircularProgressIndicator())
          : GridView.builder(
        padding:const  EdgeInsets.all(8),
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 2,
          crossAxisSpacing: 10,
          mainAxisSpacing: 10,
        ),
        itemCount: datas.length,
        itemBuilder: (context, index) {
          return ProductCard(
            product: datas[index],
            onTap: () {
              _navigateToProductDetailPage(context,datas[index]);
            },
            onUpdate: () {
              _navigateToUpdatePage(context, datas[index]);
            },
            onDelete: () {
              setState(() {
                datas.removeAt(index);
              });
            },
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          _navigateToAddProductPage(context);
        },
        child: Icon(Icons.add),
      ),
    );
  }

  void _navigateToAddProductPage(BuildContext context) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => AddProductPage(),
      ),
    );
  }

  void _navigateToUpdatePage(BuildContext context, Autogenerated product){
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => UpdateProductPage(update: product),
      ),
    );
  }

  void _navigateToProductDetailPage(BuildContext context, Autogenerated product) {
    MaterialPageRoute(
        builder: (context) => detailsofproduct(details: product),
      );
  }
}

class ProductCard extends StatelessWidget {
  final Autogenerated product;
  final VoidCallback onTap;
  final VoidCallback onUpdate;
  final VoidCallback onDelete;

  const ProductCard({
    required this.product,
    required this.onTap,
    required this.onUpdate,
    required this.onDelete,
  });

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 500, // Adjust the height as needed
      child: Card(
        elevation: 4,
        child: InkWell(
          onTap: onTap,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              Expanded(
                child: ClipRRect(
                  borderRadius: BorderRadius.only(
                    topLeft: Radius.circular(4),
                    topRight: Radius.circular(4),
                  ),
                  child: Expanded(
                  child: SizedBox(
                    width: 200,
                    height: 200,
                    child: Padding(
                      padding:EdgeInsets.only(top: 7),
                      child: Center(
                        child: Image.network(
                          fit: BoxFit.cover,
                          ''
                        ),
                      ),
                    ),
                  ),
                  )
                ),
              ),
              Padding(
                padding: EdgeInsets.all(16),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      product.itemName!,
                      style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                      maxLines: 1,
                      overflow: TextOverflow.ellipsis,
                    ),
                    SizedBox(height: 3),
                    Text(
                      product.description!.split('\n')[0], // Show only the first line of the description
                      maxLines: 1,
                      overflow: TextOverflow.ellipsis,
                      style: TextStyle(fontSize: 14, color: Colors.grey),
                    ),
                    SizedBox(height: 3),
                    Text(
                      '\$${product.price!.toStringAsFixed(2)}',
                      style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.blue),
                    ),
                  ],
                ),
              ),
              ButtonBar(
                alignment: MainAxisAlignment.center,
                children: [
                  IconButton(
                    icon: Icon(Icons.edit),
                    onPressed: onUpdate,
                  ),
                  IconButton(
                    icon: Icon(Icons.delete),
                    onPressed: onDelete,
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class UpdateProductPage extends StatelessWidget {
  final Autogenerated update;

  const UpdateProductPage({required this.update});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Update Product'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'Update Product:',
              style: TextStyle(fontSize: 20),
            ),
            SizedBox(height: 20),
            // Add your update form or fields here
          ],
        ),
      ),
    );
  }
}

class AddProductPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Add Product'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'Add New Product',
              style: TextStyle(fontSize: 20),
            ),
            SizedBox(height: 20),
            // Add input fields for photo, price, description, and name here
          ],
        ),
      ),
    );
              }   
}
class detailsofproduct extends StatelessWidget {
  final Autogenerated details;
  const detailsofproduct({super.key, required this.details, });
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('details'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'details of this product',
              style: TextStyle(fontSize: 20),
            ),
            SizedBox(height: 20),
            // Add input fields for photo, price, description, and name here
          ],
        ),
      ),
    );
              }   
}